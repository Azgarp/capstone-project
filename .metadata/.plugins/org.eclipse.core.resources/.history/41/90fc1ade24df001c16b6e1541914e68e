package com.revature.hotel_management_system.login_config;

import java.util.Objects;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.revature.hotel_management_system.model.AdminLogin;
import com.revature.hotel_management_system.model.ReceptionistLogIn;
import com.revature.hotel_management_system.model.Roles;
import com.revature.hotel_management_system.repo.AdminRepo;
import com.revature.hotel_management_system.repo.ReceptionistRepo;
import com.revature.hotel_management_system.repo.RolesRepo;

@Service
public class ReceptionistUserDetailsService implements UserDetailsService {
	
	@Autowired
	ReceptionistRepo receptionistRepo;
	@Autowired
	RolesRepo rolesRepo;
	@Autowired
	AdminRepo adminRepo;

	@Override
	public UserDetails loadUserByUsername(String emailId) throws UsernameNotFoundException {
		
		
		Roles roles=rolesRepo.findById(emailId).orElse(null);
		if(Objects.nonNull(roles)) {
			if(roles.getRole().equals("ADMIN")) {
				AdminLogin admin=adminRepo.findById(emailId).orElse(null);
				if(admin==null) {
					throw new UsernameNotFoundException("User not found");
				}
				return User.withUsername(admin.getEmailId()).password(admin.getPassword()).authorities("ADMIN").roles("ADMIN").build();
			}
			else if(roles.getRole().equals("RECEPTIONIST")) {
				ReceptionistLogIn receptionist=receptionistRepo.findById(emailId).orElse(null);
				if(receptionist==null) {
					throw new UsernameNotFoundException("User not found");
				}
				return User.withUsername(receptionist.getEmailId()).password(receptionist.getPassword()).authorities("RECEPTIONIST").roles("RECEPTIONIST").build();
			}
		}
		
	}

}
